/*
	swad.m
	The implementation classes and methods for the swad web service.
	Generated by SudzC.com
*/

#import "swad.h"
				
#import "Soap.h"
	
#import "coursesArray.h"
#import "usersArray.h"
#import "notificationsArray.h"
#import "tagsArray.h"
#import "questionsArray.h"
#import "answersArray.h"
#import "questionTagsArray.h"
#import "notification.h"
#import "course.h"
#import "tag.h"
#import "questionTag.h"
#import "question.h"
#import "answer.h"
#import "user.h"

/* Implementation of the service */
				
@implementation swad

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"https://swad.ugr.es/";
			self.namespace = @"urn:swad";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (swad*) service {
		return [swad serviceWithUsername:nil andPassword:nil];
	}
	
	+ (swad*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[swad alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns int. Service definition of function swad__loginBySession */
	- (SoapRequest*) loginBySession: (id <SoapDelegate>) handler sessionID: (NSString*) sessionID
	{
		return [self loginBySession: handler action: nil sessionID: sessionID];
	}

	- (SoapRequest*) loginBySession: (id) _target action: (SEL) _action sessionID: (NSString*) sessionID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionID forName: @"sessionID"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"loginBySession" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__loginByUserPassword */
	- (SoapRequest*) loginByUserPassword: (id <SoapDelegate>) handler userID: (NSString*) userID userPassword: (NSString*) userPassword
	{
		return [self loginByUserPassword: handler action: nil userID: userID userPassword: userPassword];
	}

	- (SoapRequest*) loginByUserPassword: (id) _target action: (SEL) _action userID: (NSString*) userID userPassword: (NSString*) userPassword
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userPassword forName: @"userPassword"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"loginByUserPassword" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__loginByUserPasswordKey */
	- (SoapRequest*) loginByUserPasswordKey: (id <SoapDelegate>) handler userID: (NSString*) userID userPassword: (NSString*) userPassword appKey: (NSString*) appKey
	{
		return [self loginByUserPasswordKey: handler action: nil userID: userID userPassword: userPassword appKey: appKey];
	}

	- (SoapRequest*) loginByUserPasswordKey: (id) _target action: (SEL) _action userID: (NSString*) userID userPassword: (NSString*) userPassword appKey: (NSString*) appKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: userID forName: @"userID"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userPassword forName: @"userPassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: appKey forName: @"appKey"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"loginByUserPasswordKey" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__getCourses */
	- (SoapRequest*) getCourses: (id <SoapDelegate>) handler wsKey: (NSString*) wsKey
	{
		return [self getCourses: handler action: nil wsKey: wsKey];
	}

	- (SoapRequest*) getCourses: (id) _target action: (SEL) _action wsKey: (NSString*) wsKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: wsKey forName: @"wsKey"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getCourses" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__getUsers */
	- (SoapRequest*) getUsers: (id <SoapDelegate>) handler wsKey: (NSString*) wsKey courseCode: (int) courseCode groupCode: (int) groupCode userTypeCode: (int) userTypeCode
	{
		return [self getUsers: handler action: nil wsKey: wsKey courseCode: courseCode groupCode: groupCode userTypeCode: userTypeCode];
	}

	- (SoapRequest*) getUsers: (id) _target action: (SEL) _action wsKey: (NSString*) wsKey courseCode: (int) courseCode groupCode: (int) groupCode userTypeCode: (int) userTypeCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: wsKey forName: @"wsKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: courseCode] forName: @"courseCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: groupCode] forName: @"groupCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: userTypeCode] forName: @"userTypeCode"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getUsers" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__getNotifications */
	- (SoapRequest*) getNotifications: (id <SoapDelegate>) handler wsKey: (NSString*) wsKey beginTime: (long) beginTime
	{
		return [self getNotifications: handler action: nil wsKey: wsKey beginTime: beginTime];
	}

	- (SoapRequest*) getNotifications: (id) _target action: (SEL) _action wsKey: (NSString*) wsKey beginTime: (long) beginTime
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: wsKey forName: @"wsKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: beginTime] forName: @"beginTime"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getNotifications" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__getTestConfig */
	- (SoapRequest*) getTestConfig: (id <SoapDelegate>) handler wsKey: (NSString*) wsKey courseCode: (int) courseCode
	{
		return [self getTestConfig: handler action: nil wsKey: wsKey courseCode: courseCode];
	}

	- (SoapRequest*) getTestConfig: (id) _target action: (SEL) _action wsKey: (NSString*) wsKey courseCode: (int) courseCode
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: wsKey forName: @"wsKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: courseCode] forName: @"courseCode"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getTestConfig" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Service definition of function swad__getTests */
	- (SoapRequest*) getTests: (id <SoapDelegate>) handler wsKey: (NSString*) wsKey courseCode: (int) courseCode beginTime: (long) beginTime
	{
		return [self getTests: handler action: nil wsKey: wsKey courseCode: courseCode beginTime: beginTime];
	}

	- (SoapRequest*) getTests: (id) _target action: (SEL) _action wsKey: (NSString*) wsKey courseCode: (int) courseCode beginTime: (long) beginTime
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: wsKey forName: @"wsKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: courseCode] forName: @"courseCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: beginTime] forName: @"beginTime"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getTests" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[tagsArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int. Service definition of function swad__sendMessage */
	- (SoapRequest*) sendMessage: (id <SoapDelegate>) handler wsKey: (NSString*) wsKey messageCode: (int) messageCode to: (NSString*) to subject: (NSString*) subject body: (NSString*) body
	{
		return [self sendMessage: handler action: nil wsKey: wsKey messageCode: messageCode to: to subject: subject body: body];
	}

	- (SoapRequest*) sendMessage: (id) _target action: (SEL) _action wsKey: (NSString*) wsKey messageCode: (int) messageCode to: (NSString*) to subject: (NSString*) subject body: (NSString*) body
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: wsKey forName: @"wsKey"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: messageCode] forName: @"messageCode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: to forName: @"to"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: subject forName: @"subject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: body forName: @"body"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"sendMessage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}


@end
	